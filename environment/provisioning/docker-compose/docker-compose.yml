# Docker compose to have Zookeeper, Kafka, Kafka Manager, NiFi, ELK, PostgreSQL and pgAdmin running for development.
# Provided by @sziliotti
version: '3'

services:
  zookeeper:
    image: confluent/zookeeper
    container_name: kafka_zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka-wurstmeister
    restart: always
    ports:
      - "9092:9092"    
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  
      KAFKA_CREATE_TOPICS: "TopicTest1:1:1"  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on: 
      - zookeeper

  kafka-manager:
    image: sheepkiller/kafka-manager:stable
    container_name: kafka-manager
    restart: always
    ports:
      - "9000:9000"    
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    depends_on: 
      - zookeeper
      - kafka
  
  nifi:
    image: apache/nifi:latest
    container_name: nifi
    restart: always
    ports:
      - "8080:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - node.name=poces-nifi
      - cluster.name=elasticsearch-cluster
      - discovery.type=single-node
      - VIRTUAL_HOST=elastic.mydomain.com
      - VIRTUAL_PORT=9200
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - VIRTUAL_HOST=kibana.mydomain.com
      - VIRTUAL_PORT=5601
    depends_on:
      - elasticsearch

  # Use postgres/example user/password credentials
  postgresql:
    image: postgres
    container_name: postgresql
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
 
  #adminer:
  #  image: adminer
  #  container_name: adminer
  #  restart: always
  #  ports:
  #    - 8081:8080

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@domain.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on: 
      - postgresql

  